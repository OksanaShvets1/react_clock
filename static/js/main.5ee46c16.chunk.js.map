{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","intervalID","state","time","Date","toUTCString","slice","handleDocumentClick","window","setInterval","setState","console","info","document","addEventListener","this","prevProps","name","props","clearInterval","removeEventListener","className","Component","App","hasClock","clockName","stateSet","newName","value","now","toString","getRandomName","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,gBADF,IAGEC,MAAQ,CAAEC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAHvD,EAqBEC,oBAAsB,WACpB,EAAKN,WAAaO,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEP,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAC3DK,QAAQC,KAAR,UAAgB,EAAKV,MAAMC,SAC1B,MAzBP,uDAKE,WACEU,SAASC,iBAAiB,QAASC,KAAKR,uBAN5C,gCASE,SAAmBS,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAChCN,QAAQC,KAAR,uBAA6BI,EAAUC,KAAvC,eAAkDF,KAAKG,MAAMD,SAXnE,kCAeE,WACEE,cAAcJ,KAAKd,YAEnBY,SAASO,oBAAoB,QAASL,KAAKR,uBAlB/C,oBA4BE,WACE,IAAQU,EAASF,KAAKG,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGN,KAAKb,MAAMC,cAxCtB,GAA2BmB,aCKpB,IAAMC,EAAb,4MACEtB,gBADF,IAGEC,MAAQ,CACNsB,UAAU,EACVC,UAAW,WALf,EA4BEC,SAAW,WACT,EAAKhB,SAAS,CAAEc,UAAU,KA7B9B,uDAQE,WAAqB,IAAD,OAClBT,KAAKd,WAAaO,OAAOC,aAAY,WACnC,IAAMkB,EAhBZ,WACE,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAaIG,GAEhB,EAAKrB,SAAS,CAAEe,UAAWE,MAC1B,MAEHd,SAASC,iBAAiB,eAAe,SAACkB,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEc,UAAU,OAG5BX,SAASC,iBAAiB,QAASC,KAAKW,YApB5C,kCAuBE,WACElB,OAAOW,cAAcJ,KAAKd,YAC1BY,SAASO,oBAAoB,QAASL,KAAKW,YAzB/C,oBAgCE,WACE,MAAgCX,KAAKb,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GAAY,cAAC,EAAD,CAAOP,KAAMQ,WAvClC,GAAyBH,aCbzBY,IAASC,OACP,cAAC,EAAD,IACAtB,SAASuB,eAAe,W","file":"static/js/main.5ee46c16.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\ninterface ClockState {\n  time: string;\n}\n\nexport class Clock extends Component<ClockProps, ClockState> {\n  intervalID: number | undefined;\n\n  state = { time: new Date().toUTCString().slice(-12, -4) };\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleDocumentClick);\n  }\n\n  componentDidUpdate(prevProps: ClockProps) {\n    if (prevProps.name !== this.props.name) {\n      console.info(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n\n    document.removeEventListener('click', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = () => {\n    this.intervalID = window.setInterval(() => {\n      this.setState({ time: new Date().toUTCString().slice(-12, -4) });\n      console.info(`${this.state.time}`);\n    }, 1000);\n  };\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, AppState> {\n  intervalID: number | undefined;\n\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    this.intervalID = window.setInterval(() => {\n      const newName = getRandomName();\n\n      this.setState({ clockName: newName });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', this.stateSet);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalID);\n    document.removeEventListener('click', this.stateSet);\n  }\n\n  stateSet = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}